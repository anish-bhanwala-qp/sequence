!function(e){var t={};function a(u){if(t[u])return t[u].exports;var l=t[u]={i:u,l:!1,exports:{}};return e[u].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=e,a.c=t,a.d=function(e,t,u){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:u})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var u=Object.create(null);if(a.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(u,l,function(t){return e[t]}.bind(null,l));return u},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=6)}([function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(1)),d=u(a(2)),f=function(){function e(e,t){this.rank=e,this.suit=t}return e.prototype.isTwoEyedJack=function(){return this.suit===d.default.DIAMOND&&this.rank===l.default.JACK||this.suit===d.default.CLUB&&this.rank===l.default.JACK},e.prototype.isOneEyedJack=function(){return this.suit===d.default.SPADE&&this.rank===l.default.JACK||this.suit===d.default.HEART&&this.rank===l.default.JACK},e.prototype.matches=function(e){return null!=e&&(e.suit===this.suit&&e.rank===this.rank)},e.prototype.toString=function(){return"rank: "+this.rank+", suit: "+this.suit},e}();t.default=f},function(e,t,a){"use strict";var u;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.ACE=0]="ACE",e[e.TWO=1]="TWO",e[e.THREE=2]="THREE",e[e.FOUR=3]="FOUR",e[e.FIVE=4]="FIVE",e[e.SIX=5]="SIX",e[e.SEVEN=6]="SEVEN",e[e.EIGHT=7]="EIGHT",e[e.NINE=8]="NINE",e[e.TEN=9]="TEN",e[e.JACK=10]="JACK",e[e.QUEEN=11]="QUEEN",e[e.KING=12]="KING"}(u||(u={})),t.default=u},function(e,t,a){"use strict";var u;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.SPADE=0]="SPADE",e[e.CLUB=1]="CLUB",e[e.DIAMOND=2]="DIAMOND",e[e.HEART=3]="HEART"}(u||(u={})),t.default=u},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(0)),d=u(a(2)),f=u(a(1)),n=function(){function e(){for(var e in this.cards=[],d.default)if(isNaN(Number(e))&&d.default.hasOwnProperty(e)){var t=d.default[d.default[e]];for(var a in f.default)if(isNaN(Number(a))&&f.default.hasOwnProperty(a)){var u=f.default[f.default[a]];this.cards.push(new l.default(u,t))}}}return e.prototype.shuffle=function(){for(var e,t,a=this.cards.length;0!==a;)t=Math.floor(Math.random()*a),a-=1,e=this.cards[a],this.cards[a]=this.cards[t],this.cards[t]=e},e.prototype.isEmpty=function(){return 0===this.cards.length},e.prototype.dealCard=function(){if(this.isEmpty())throw new Error("No cards left in the deck");return this.removeTopCard()},e.prototype.removeTopCard=function(){return this.cards.splice(0,1)[0]},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=function(e){this.color=e};t.default=u},function(e,t,a){"use strict";var u;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.PLACE_CHIP=0]="PLACE_CHIP",e[e.REPLACE_DEAD_CARD=1]="REPLACE_DEAD_CARD",e[e.REMOVE_CHIP=2]="REMOVE_CHIP"}(u||(u={})),t.default=u},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(7)),d=u(a(3)),f=new l.default;console.log(f),console.log(new d.default)},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(8)),d=u(a(9)),f=u(a(3)),n=u(a(10)),r=u(a(11)),o=u(a(4)),i=u(a(5)),s=u(a(14)),E=function(){function e(){this.player1=new l.default("player1",n.default.NUMBER_OF_CARDS_TWO_PLAYER,!1,s.default.GREEN),this.player2=new l.default("computer",n.default.NUMBER_OF_CARDS_TWO_PLAYER,!0,s.default.RED),this.nextTurn=this.player1,this.board=new d.default,this.deck=new f.default,this.interval=0}return e.prototype.start=function(){var e=this;this.deck.shuffle(),this.dealCards(this.player1),this.dealCards(this.player2);var t=new r.default;this.interval=setInterval(function(){e.nextPlayerMove(e.nextTurn,t.nextMove),e.nextTurn=e.nextTurn===e.player1?e.player2:e.player1})},e.prototype.nextPlayerMove=function(e,t){var a=t(this.board.cards,e.cards);switch(this.validatePlayerHasCard(e,a.card),this.dealNewCardToPlayer(e,a.card),a.type){case i.default.PLACE_CHIP:this.board.placeChip(new o.default(e.chipColor),a.card,a.position);break;default:throw new Error("Invalid move type: "+a.type)}this.isGameOver()&&this.markGameOver(this.nextTurn.name+" wins!")},e.prototype.validatePlayerHasCard=function(e,t){for(var a=0,u=e.cards;a<u.length;a++){if(u[a].matches(t))return}throw new Error("Card should belong to player's hand: "+t.toString)},e.prototype.isGameOver=function(){return!1},e.prototype.markGameOver=function(e){alert(e),clearInterval(this.interval)},e.prototype.dealCards=function(e){for(var t=0;t<n.default.NUMBER_OF_CARDS_TWO_PLAYER;t+=1)this.dealCardToPlayer(e)},e.prototype.dealCardToPlayer=function(e){var t=this.deck.dealCard();e.addCard(t)},e.prototype.dealNewCardToPlayer=function(e,t){e.discardCard(t),this.dealCardToPlayer(e)},e}();t.default=E},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t,a,u){this.name=e,this.cards=[],this.maxCardsAllowed=t,this.isComputer=a,this.chipColor=u}return e.prototype.addCard=function(e){if(this.cards.length===this.maxCardsAllowed)throw Error("A player cannot have more than "+this.maxCardsAllowed+" cards");this.cards.push(e)},e.prototype.discardCard=function(e){for(var t=0;t<this.cards.length;t++){if(this.cards[t].matches(e))return void this.cards.splice(t,1)}throw new Error("Player does not have this card: "+e.toString())},e}();t.default=u},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(0)),d=u(a(1)),f=u(a(2)),n=u(a(3)),r=u(a(4)),o=function(){function e(){this.cards=[[null,new l.default(d.default.TWO,f.default.SPADE),new l.default(d.default.THREE,f.default.SPADE),new l.default(d.default.FOUR,f.default.SPADE),new l.default(d.default.FIVE,f.default.SPADE),new l.default(d.default.SIX,f.default.SPADE),new l.default(d.default.SEVEN,f.default.SPADE),new l.default(d.default.EIGHT,f.default.SPADE),new l.default(d.default.NINE,f.default.SPADE),null],[new l.default(d.default.SIX,f.default.CLUB),new l.default(d.default.FIVE,f.default.CLUB),new l.default(d.default.FOUR,f.default.CLUB),new l.default(d.default.THREE,f.default.CLUB),new l.default(d.default.TWO,f.default.CLUB),new l.default(d.default.ACE,f.default.HEART),new l.default(d.default.KING,f.default.HEART),new l.default(d.default.QUEEN,f.default.HEART),new l.default(d.default.TEN,f.default.HEART),new l.default(d.default.TEN,f.default.SPADE)],[new l.default(d.default.SEVEN,f.default.CLUB),new l.default(d.default.ACE,f.default.SPADE),new l.default(d.default.TWO,f.default.DIAMOND),new l.default(d.default.THREE,f.default.DIAMOND),new l.default(d.default.FOUR,f.default.DIAMOND),new l.default(d.default.FIVE,f.default.DIAMOND),new l.default(d.default.SIX,f.default.DIAMOND),new l.default(d.default.SEVEN,f.default.DIAMOND),new l.default(d.default.NINE,f.default.HEART),new l.default(d.default.QUEEN,f.default.SPADE)],[new l.default(d.default.EIGHT,f.default.CLUB),new l.default(d.default.KING,f.default.SPADE),new l.default(d.default.SIX,f.default.CLUB),new l.default(d.default.FIVE,f.default.CLUB),new l.default(d.default.FOUR,f.default.CLUB),new l.default(d.default.THREE,f.default.CLUB),new l.default(d.default.TWO,f.default.CLUB),new l.default(d.default.EIGHT,f.default.DIAMOND),new l.default(d.default.EIGHT,f.default.HEART),new l.default(d.default.KING,f.default.SPADE)],[new l.default(d.default.NINE,f.default.CLUB),new l.default(d.default.QUEEN,f.default.SPADE),new l.default(d.default.SEVEN,f.default.CLUB),new l.default(d.default.SIX,f.default.HEART),new l.default(d.default.FIVE,f.default.HEART),new l.default(d.default.FOUR,f.default.HEART),new l.default(d.default.ACE,f.default.HEART),new l.default(d.default.NINE,f.default.DIAMOND),new l.default(d.default.SEVEN,f.default.HEART),new l.default(d.default.ACE,f.default.SPADE)],[new l.default(d.default.TEN,f.default.CLUB),new l.default(d.default.TEN,f.default.SPADE),new l.default(d.default.EIGHT,f.default.CLUB),new l.default(d.default.SEVEN,f.default.HEART),new l.default(d.default.TWO,f.default.HEART),new l.default(d.default.THREE,f.default.HEART),new l.default(d.default.KING,f.default.HEART),new l.default(d.default.TEN,f.default.DIAMOND),new l.default(d.default.SIX,f.default.HEART),new l.default(d.default.TWO,f.default.DIAMOND)],[new l.default(d.default.QUEEN,f.default.CLUB),new l.default(d.default.NINE,f.default.SPADE),new l.default(d.default.NINE,f.default.CLUB),new l.default(d.default.EIGHT,f.default.HEART),new l.default(d.default.NINE,f.default.HEART),new l.default(d.default.TEN,f.default.HEART),new l.default(d.default.QUEEN,f.default.HEART),new l.default(d.default.QUEEN,f.default.DIAMOND),new l.default(d.default.FIVE,f.default.HEART),new l.default(d.default.THREE,f.default.DIAMOND)],[new l.default(d.default.KING,f.default.CLUB),new l.default(d.default.EIGHT,f.default.SPADE),new l.default(d.default.TEN,f.default.CLUB),new l.default(d.default.QUEEN,f.default.CLUB),new l.default(d.default.KING,f.default.CLUB),new l.default(d.default.ACE,f.default.CLUB),new l.default(d.default.ACE,f.default.DIAMOND),new l.default(d.default.KING,f.default.DIAMOND),new l.default(d.default.FOUR,f.default.HEART),new l.default(d.default.FOUR,f.default.DIAMOND)],[new l.default(d.default.ACE,f.default.CLUB),new l.default(d.default.SEVEN,f.default.SPADE),new l.default(d.default.SIX,f.default.SPADE),new l.default(d.default.FIVE,f.default.SPADE),new l.default(d.default.FOUR,f.default.SPADE),new l.default(d.default.THREE,f.default.SPADE),new l.default(d.default.TWO,f.default.SPADE),new l.default(d.default.TWO,f.default.HEART),new l.default(d.default.THREE,f.default.HEART),new l.default(d.default.FIVE,f.default.DIAMOND)],[null,new l.default(d.default.ACE,f.default.SPADE),new l.default(d.default.KING,f.default.SPADE),new l.default(d.default.QUEEN,f.default.SPADE),new l.default(d.default.TEN,f.default.SPADE),new l.default(d.default.NINE,f.default.SPADE),new l.default(d.default.EIGHT,f.default.SPADE),new l.default(d.default.SEVEN,f.default.HEART),new l.default(d.default.SIX,f.default.HEART),null]]}return e.prototype.placeChip=function(e,t,a){this.validateChipCanBePlaced(t,a),this.cards[a.row][a.col]=e},e.prototype.validateChipCanBePlaced=function(e,t){var a=t.row,u=t.col,d=this.cards[a][u];if(d instanceof r.default)throw new Error("Chip already placed at position: "+t.toString());if(null!==d&&!(d instanceof l.default&&e.matches(d)))throw new Error("Card at: "+a+", "+u+" in deck is: "+(null==d?"corner":d.toString())+", and player's card is "+e.toString())},e.prototype.verifyBoard=function(){for(var e=new n.default,t=0;t<this.cards.length;t+=1)for(var a=this.cards[t],u=0;u<a.length;u+=1){var d=a[u];if(null!=d)for(var f=0;f<e.cards.length;f++){var r=e.cards[f];if(r instanceof l.default&&d instanceof l.default&&r.suit===d.suit&&r.rank===d.rank){e.cards.splice(f,1);break}}}console.log(e)},e}();t.default=o},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=Object.freeze({NUMBER_OF_CARDS_TWO_PLAYER:7});t.default=u},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(0)),d=u(a(12)),f=u(a(5)),n=u(a(13)),r=function(){function e(){}return e.prototype.nextMove=function(e,t){for(var a=0,u=t;a<u.length;a++){var l=u[a],n=this.findCardPosition(e,l);if(null!=n)return new d.default(f.default.PLACE_CHIP,l,n)}throw new Error("All player cards are dead cards")},e.prototype.findCardPosition=function(e,t){for(var a=0;a<e.length;a++)for(var u=e[a],d=0;d<u.length;d++){var f=u[d];if(f instanceof l.default&&t.matches(f))return new n.default(a,d)}return null},e}();t.default=r},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=function(e,t,a){this.type=e,this.card=t,this.position=a};t.default=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t){this.row=e,this.col=t}return e.prototype.toString=function(){return"row: "+this.row+", col: "+this.col},e}();t.default=u},function(e,t,a){"use strict";var u;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.RED=0]="RED",e[e.GREEN=1]="GREEN"}(u||(u={})),t.default=u}]);