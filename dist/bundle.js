!function(e){var t={};function a(u){if(t[u])return t[u].exports;var l=t[u]={i:u,l:!1,exports:{}};return e[u].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=e,a.c=t,a.d=function(e,t,u){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:u})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var u=Object.create(null);if(a.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(u,l,function(t){return e[t]}.bind(null,l));return u},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=10)}([function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(1)),d=u(a(2)),n=function(){function e(e,t){if(t<1||t>4)throw new Error("Invalid suit value: "+t);if(e<1||e>13)throw new Error("Invalid rank value: "+e);this.rank=e,this.suit=t,this.twoEyedJack=this.isTwoEyedJack(),this.oneEyedJack=this.isOneEyedJack()}return e.prototype.isTwoEyedJack=function(){return this.suit===d.default.DIAMOND&&this.rank===l.default.JACK||this.suit===d.default.CLUB&&this.rank===l.default.JACK},e.prototype.isOneEyedJack=function(){return this.suit===d.default.SPADE&&this.rank===l.default.JACK||this.suit===d.default.HEART&&this.rank===l.default.JACK},e.prototype.matches=function(e){return null!=e&&(e.suit===this.suit&&e.rank===this.rank)},e.prototype.toString=function(){return"Rank: "+this.rankDisplay()+", Suit: "+d.default.text(this.suit)},e.prototype.clone=function(){return new e(this.rank,this.suit)},e.prototype.rankDisplay=function(){return l.default.text(this.rank)},e.prototype.suitDisplay=function(){switch(this.suit){case d.default.SPADE:return"♠";case d.default.HEART:return"♥";case d.default.DIAMOND:return"♦";case d.default.CLUB:return"♣";default:throw new Error("Invalid suit: "+d.default.text(this.suit))}},e.prototype.suitColor=function(){switch(this.suit){case d.default.SPADE:case d.default.CLUB:return"#000";case d.default.HEART:case d.default.DIAMOND:return"red";default:throw new Error("Invalid suit: "+d.default.text(this.suit))}},e.prototype.getDisplayHtml=function(){return this.rankDisplay()+' <span style="color: '+this.suitColor()+'">'+this.suitDisplay()+"</span>"},e}();t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=Object.freeze({ACE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,SIX:6,SEVEN:7,EIGHT:8,NINE:9,TEN:10,JACK:11,QUEEN:12,KING:13,text:function(e){return u.validate(e),e===u.ACE?"A":e===u.JACK?"J":e===u.QUEEN?"Q":e===u.KING?"K":e},validate:function(e){if(null==e||e<1||e>13)throw Error("Invalid rank value: "+e+". Must be number between 1 and 13.")}});t.default=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=Object.freeze({SPADE:1,CLUB:2,DIAMOND:3,HEART:4,text:function(e){switch(u.validate(e),e){case u.SPADE:return"Spade";case u.CLUB:return"Club";case u.DIAMOND:return"Diamond";case u.HEART:return"Heart"}},validate:function(e){if("number"!=typeof e||e<1||e>4)throw new Error("Invalid suit value: "+e+". Must be number between 1 and 4.")}});t.default=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t){if(e<0||e>9)throw Error("Invalid row number: "+e);if(t<0||t>9)throw Error("Invalid column number: "+t);this.row=e,this.col=t}return e.prototype.toString=function(){return"row: "+this.row+", col: "+this.col},e}();t.default=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=Object.freeze({NUMBER_OF_CARDS_TWO_PLAYER:7,CANVAS_WIDTH:600,CANVAS_HEIGHT:600,CARD_SIZE:60,RANK_FONT_FAMILY:"25px Helvetica",RANK_X_OFFSET:2,RANK_Y_OFFSET:22,SUIT_FONT_FAMILY:"35px Helvetica",SUIT_X_OFFSET:36,SUIT_Y_OFFSET:58,INDEX_FONT_FAMILY:"10px Helvetica",INDEX_X_OFFSET:33,INDEX_Y_OFFSET:15,TURN_INTERVAL:200,CHIP_RADIUS:12,PLAYER_CARDS_DIV_FONT_SIZE:"18px",PLAYER_CARDS_INDEX_FONT_SIZE:"10px",RESULT_DIV_FONT_SIZE:"50px"}),l=Object.freeze({NUMBER_OF_CARDS_TWO_PLAYER:7,CANVAS_WIDTH:1200,CANVAS_HEIGHT:1200,CARD_SIZE:120,RANK_FONT_FAMILY:"50px Helvetica",RANK_X_OFFSET:2,RANK_Y_OFFSET:44,SUIT_FONT_FAMILY:"70px Helvetica",SUIT_X_OFFSET:72,SUIT_Y_OFFSET:116,INDEX_FONT_FAMILY:"20px Helvetica",INDEX_X_OFFSET:66,INDEX_Y_OFFSET:20,TURN_INTERVAL:200,CHIP_RADIUS:24,PLAYER_CARDS_DIV_FONT_SIZE:"36px",PLAYER_CARDS_INDEX_FONT_SIZE:"20px",RESULT_DIV_FONT_SIZE:"50px"}),d=Object.freeze({get NUMBER_OF_CARDS_TWO_PLAYER(){return n.NUMBER_OF_CARDS_TWO_PLAYER},get CANVAS_WIDTH(){return n.CANVAS_WIDTH},get CANVAS_HEIGHT(){return n.CANVAS_HEIGHT},get CARD_SIZE(){return n.CARD_SIZE},get RANK_FONT_FAMILY(){return n.RANK_FONT_FAMILY},get RANK_X_OFFSET(){return n.RANK_X_OFFSET},get RANK_Y_OFFSET(){return n.RANK_Y_OFFSET},get SUIT_FONT_FAMILY(){return n.SUIT_FONT_FAMILY},get SUIT_X_OFFSET(){return n.SUIT_X_OFFSET},get SUIT_Y_OFFSET(){return n.SUIT_Y_OFFSET},get INDEX_FONT_FAMILY(){return n.INDEX_FONT_FAMILY},get INDEX_X_OFFSET(){return n.INDEX_X_OFFSET},get INDEX_Y_OFFSET(){return n.CANVAS_HEIGHT},get TURN_INTERVAL(){return n.INDEX_Y_OFFSET},get CHIP_RADIUS(){return n.CHIP_RADIUS},get PLAYER_CARDS_DIV_FONT_SIZE(){return n.PLAYER_CARDS_DIV_FONT_SIZE},get PLAYER_CARDS_INDEX_FONT_SIZE(){return n.PLAYER_CARDS_INDEX_FONT_SIZE},get RESULT_DIV_FONT_SIZE(){return n.RESULT_DIV_FONT_SIZE}}),n=l;t.setupGameConfig=function(e){void 0===e&&(e=!1),n=e?u:l},t.default=d},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t){void 0===t&&(t=!1),this.isChip=!0,this.color=e,this.inSequence=t}return e.prototype.markInSequence=function(){this.inSequence=!0},e.prototype.clone=function(){return new e(this.color,this.inSequence)},e.prototype.isInSequence=function(){return this.inSequence},e}();t.default=u},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=function(e,t,a){this.type=e,this.card=t,this.position=a};t.default=u},function(e,t,a){"use strict";var u;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.PLACE_CHIP=1]="PLACE_CHIP",e[e.REPLACE_DEAD_CARD=2]="REPLACE_DEAD_CARD",e[e.REMOVE_CHIP=3]="REMOVE_CHIP"}(u||(u={})),t.default=u},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(0)),d=u(a(2)),n=u(a(1)),r=function(){function e(){this.cards=[],this.discardedCards=[],this.addOneDeck(),this.addOneDeck()}return e.prototype.addOneDeck=function(){this.addCardsForSuit(d.default.CLUB),this.addCardsForSuit(d.default.DIAMOND),this.addCardsForSuit(d.default.HEART),this.addCardsForSuit(d.default.SPADE)},e.prototype.addCardsForSuit=function(e){this.cards.push(new l.default(n.default.ACE,e)),this.cards.push(new l.default(n.default.TWO,e)),this.cards.push(new l.default(n.default.THREE,e)),this.cards.push(new l.default(n.default.FOUR,e)),this.cards.push(new l.default(n.default.FIVE,e)),this.cards.push(new l.default(n.default.SIX,e)),this.cards.push(new l.default(n.default.SEVEN,e)),this.cards.push(new l.default(n.default.EIGHT,e)),this.cards.push(new l.default(n.default.NINE,e)),this.cards.push(new l.default(n.default.TEN,e)),this.cards.push(new l.default(n.default.JACK,e)),this.cards.push(new l.default(n.default.QUEEN,e)),this.cards.push(new l.default(n.default.KING,e))},e.prototype.shuffle=function(){for(var e,t,a=this.cards.length;0!==a;)t=Math.floor(Math.random()*a),a-=1,e=this.cards[a],this.cards[a]=this.cards[t],this.cards[t]=e},e.prototype.isEmpty=function(){return 0===this.cards.length},e.prototype.dealCard=function(){this.isEmpty()&&(console.log("No cards left in the deck, reshuffling from discard pile."),this.moveCardsFromDiscardPile(),this.shuffle());var e=this.removeTopCard();return this.discardedCards.push(e),e},e.prototype.removeTopCard=function(){return this.cards.splice(0,1)[0]},e.prototype.moveCardsFromDiscardPile=function(){for(var e=0;e<this.discardedCards.length;e++){var t=this.discardedCards[e];this.discardedCards.splice(e,1),this.cards.push(t)}},e}();t.default=r},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(0)),d=u(a(6)),n=u(a(7)),r=u(a(3));function f(e,t){var a=t.col-e.col,u=t.row-e.row;return Math.sqrt(a*a+u*u)}function o(e,t){for(var a=0;a<e.length;a++)for(var u=e[a],d=0;d<u.length;d++){var n=u[d];if(n instanceof l.default&&t.matches(n))return new r.default(a,d)}return null}t.default=function(e,t,a){for(var u=[],i=0;i<t.length;i++){var s=t[i],c=o(e,s);if(null==c)return new d.default(n.default.REPLACE_DEAD_CARD,s);u.push(c)}var E=function(e,t){var a=t[0],u=f(e,t[0]);return t.forEach(function(t){var l=f(e,t);l<u&&(a=t,u=l)}),a}(new r.default(5,5),u),h=e[E.row][E.col];if(!(h instanceof l.default))throw Error("no card at position: "+E.toString());return new d.default(n.default.PLACE_CHIP,h,E)}},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(11)),d=u(a(9)),n=u(a(16));window.Game=l.default,window.ManualUser=n.default,window.Computer=d.default},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)Object.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var d=u(a(12)),n=u(a(13)),r=u(a(8)),f=l(a(4)),o=u(a(6)),i=u(a(0)),s=u(a(9)),c=u(a(5)),E=u(a(7)),h=u(a(14)),p=u(a(15)),A=u(a(2)),w=u(a(1)),_=u(a(3)),I=function(){function e(e,t,a,u,l){if(void 0===a&&(a="Computer"),void 0===u&&(u=s.default),void 0===l&&(l=!1),null==t||"function"!=typeof t)throw Error("Must provide game algorithm function to play");f.setupGameConfig(l),this.canvas=this.createCanvas(),this.ctx=this.setupCanvas(),this.resultHeader=this.createResultHeading(),this.player1DisplayDiv=this.createPlayerCardsHolder("player1DisplayDiv"),this.player2DisplayDiv=this.createPlayerCardsHolder("player2DisplayDiv"),this.player1=new d.default(e,f.default.NUMBER_OF_CARDS_TWO_PLAYER,!1,h.default.GREEN),this.player2=new d.default(a,f.default.NUMBER_OF_CARDS_TWO_PLAYER,!0,h.default.BLUE),this.computer1=t,this.computer2=u,this.board=new n.default,this.deck=new r.default,this.start()}return e.prototype.start=function(){this.deck.shuffle(),this.dealCards(this.player1),this.dealCards(this.player2),this.display(),this.playOneRound()},e.prototype.playOneRound=function(){var e=this;try{try{this.nextPlayerMove(this.player1,this.computer1),this.display()}catch(e){return console.error(e),void this.markGameOver(this.player2.name+' won because of other player\'s \n          error: <small style="color: #848484">'+e.message+"</small>")}if(this.isGameOver(this.player1))return void this.markGameOver(this.player1.name+" wins!");try{this.nextPlayerMove(this.player2,this.computer2),this.display()}catch(e){return console.error(e),void this.markGameOver(this.player1.name+' won because of other player\'s \n          error: <small style="color: #848484">'+e.message+"</small>")}if(this.isGameOver(this.player2))return void this.markGameOver(this.player2.name+" wins!");this.turnTimeout=setTimeout(function(){return e.playOneRound()},f.default.TURN_INTERVAL)}catch(e){console.error(e,this),this.markGameOver("Game error: "+e.message)}},e.prototype.nextPlayerMove=function(e,t,a){void 0===a&&(a=!1);var u=t(this.board.cloneSlots(),e.cloneCards(),e.chipColor);this.validateMoveStructure(u);var l=this.createMoveClassObject(u);switch(this.validatePlayerHasCard(e,l.card),this.dealNewCardToPlayer(e,l.card),l.type){case E.default.PLACE_CHIP:if(null==l.position)throw Error("Invalid position to place chip");this.board.placeChip(new c.default(e.chipColor),l.card,l.position);break;case E.default.REPLACE_DEAD_CARD:if(this.validateDeadCard(e,l),a)return;return this.display(),void this.nextPlayerMove(e,t,!0);case E.default.REMOVE_CHIP:if(null==l.position)throw Error("Invalid position ["+l.position+"]");return this.validateRemoveChip(l,e),void this.board.removeChip(l.position);default:throw new Error("Invalid move type: "+l.type)}},e.prototype.createMoveClassObject=function(e){return new o.default(e.type,new i.default(e.card.rank,e.card.suit),null!=e.position?new _.default(e.position.row,e.position.col):e.position)},e.prototype.validateMoveStructure=function(e){if(null==e)throw Error("Move cannot be null or undefined");if(null==e.type||e.type!==E.default.REMOVE_CHIP&&e.type!==E.default.PLACE_CHIP&&e.type!==E.default.REPLACE_DEAD_CARD)throw console.log("Move",e),Error("Invalid move structure. move.type must be number 1,2 or 3.");if(null==e.card||null==e.card.suit||null==e.card.rank)throw console.log("Move",e),Error("Invalid move structure. move.card should have suit & rank.");if(A.default.validate(e.card.suit),w.default.validate(e.card.rank),e.type!==E.default.REPLACE_DEAD_CARD&&(null==e.position||null==e.position.row||null==e.position.col||e.position.row<0||e.position.row>9||e.position.col<0||e.position.col>9))throw console.log("Move",e),Error("Invalid move structure. move.position must have row & col attributes \n      with values between 0 & 9 inclusive.")},e.prototype.validateRemoveChip=function(e,t){if(!e.card.isOneEyedJack())throw Error("Card is not oneEyedJack ["+e.card.toString()+"]");if(null==e.position)throw Error("Invalid position ["+e.position+"]");var a=this.board.slots[e.position.row][e.position.col];if(!(a instanceof c.default))throw Error("There is no chip at position: "+e.position.toString()+" "+a);if(a.color===t.chipColor)throw Error("Select chip of opponent player.");if(a instanceof c.default&&a.isInSequence())throw Error("Chip is already part of a sequence")},e.prototype.validateDeadCard=function(e,t){for(var a=0;a<this.board.slots.length;a+=1)for(var u=this.board.slots[a],l=0;l<u.length;l+=1){var d=u[l];if(d instanceof i.default&&t.card.matches(d))throw Error("Card is not dead: "+t.card.toString())}},e.prototype.validatePlayerHasCard=function(e,t){for(var a=0,u=e.cards;a<u.length;a++){if(u[a].matches(t))return}throw new Error("Card should belong to player's hand: "+t.toString())},e.prototype.display=function(){this.board.displayBoard(this.ctx),this.player1.display(this.player1DisplayDiv),this.player2.display(this.player2DisplayDiv)},e.prototype.isGameOver=function(e){return p.default.calculate(this.board,e.chipColor)},e.prototype.markGameOver=function(e){this.resultHeader.innerHTML=e,this.resultHeader.style.display="block",console.log(this),null!=this.turnTimeout&&clearTimeout(this.turnTimeout),this.display()},e.prototype.dealCards=function(e){for(var t=0;t<f.default.NUMBER_OF_CARDS_TWO_PLAYER;t+=1)this.dealCardToPlayer(e)},e.prototype.dealCardToPlayer=function(e){var t=this.deck.dealCard();e.addCard(t)},e.prototype.dealNewCardToPlayer=function(e,t){e.discardCard(t),this.dealCardToPlayer(e)},e.prototype.createResultHeading=function(){var e=document.createElement("h1");return e.id="resultHeading",e.style.display="none",e.style.fontSize=f.default.RESULT_DIV_FONT_SIZE,e.style.cssFloat="right",this.appendElementToBody(e),e},e.prototype.createPlayerCardsHolder=function(e){var t=document.createElement("div");return t.id=e,t.style.fontSize=f.default.PLAYER_CARDS_DIV_FONT_SIZE,this.appendElementToBody(t),t},e.prototype.createCanvas=function(){var e=document.createElement("canvas");return e.width=f.default.CANVAS_WIDTH,e.height=f.default.CANVAS_HEIGHT,e.id="canvasId",this.appendElementToBody(e),e},e.prototype.appendElementToBody=function(e){document.getElementsByTagName("body")[0].appendChild(e)},e.prototype.setupCanvas=function(){var e=window.devicePixelRatio||1,t=this.canvas.getBoundingClientRect();this.canvas.width=t.width*e,this.canvas.height=t.height*e;var a=this.canvas.getContext("2d");if(null===a)throw Error("Unable to get CanvasRenderingContext2D");return a.scale(e,e),a},e}();t.default=I},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(4)),d=function(){function e(e,t,a,u){this.name=e,this.cards=[],this.maxCardsAllowed=t,this.isComputer=a,this.chipColor=u,this.sequenceCount=0}return e.prototype.addCard=function(e){if(this.cards.length===this.maxCardsAllowed)throw Error("A player cannot have more than "+this.maxCardsAllowed+" cards");this.cards.push(e)},e.prototype.discardCard=function(e){for(var t=0;t<this.cards.length;t++){if(this.cards[t].matches(e))return void this.cards.splice(t,1)}throw new Error("Player does not have this card: "+e.toString())},e.prototype.cloneCards=function(){var e=[];return this.cards.forEach(function(t){return e.push(t.clone())}),e},e.prototype.sequenceCompleted=function(){this.sequenceCount++},e.prototype.getSequenceCount=function(){return this.sequenceCount},e.prototype.display=function(e){var t=0;e.innerHTML='<span style="color: '+this.chipColor+'">'+this.name+"</span>: "+this.cards.map(function(e){var a=e.isOneEyedJack()?"👁":e.isTwoEyedJack()?"👀":"";return e.getDisplayHtml()+a+'<span style="font-size:'+l.default.PLAYER_CARDS_INDEX_FONT_SIZE+';">('+t+++")</span>"}).join(", ")},e}();t.default=d},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(0)),d=u(a(1)),n=u(a(2)),r=u(a(8)),f=u(a(5)),o=u(a(3)),i=u(a(4)),s=function(){function e(){this.slots=[[null,new l.default(d.default.TWO,n.default.SPADE),new l.default(d.default.THREE,n.default.SPADE),new l.default(d.default.FOUR,n.default.SPADE),new l.default(d.default.FIVE,n.default.SPADE),new l.default(d.default.SIX,n.default.SPADE),new l.default(d.default.SEVEN,n.default.SPADE),new l.default(d.default.EIGHT,n.default.SPADE),new l.default(d.default.NINE,n.default.SPADE),null],[new l.default(d.default.SIX,n.default.CLUB),new l.default(d.default.FIVE,n.default.CLUB),new l.default(d.default.FOUR,n.default.CLUB),new l.default(d.default.THREE,n.default.CLUB),new l.default(d.default.TWO,n.default.CLUB),new l.default(d.default.ACE,n.default.HEART),new l.default(d.default.KING,n.default.HEART),new l.default(d.default.QUEEN,n.default.HEART),new l.default(d.default.TEN,n.default.HEART),new l.default(d.default.TEN,n.default.SPADE)],[new l.default(d.default.SEVEN,n.default.CLUB),new l.default(d.default.ACE,n.default.SPADE),new l.default(d.default.TWO,n.default.DIAMOND),new l.default(d.default.THREE,n.default.DIAMOND),new l.default(d.default.FOUR,n.default.DIAMOND),new l.default(d.default.FIVE,n.default.DIAMOND),new l.default(d.default.SIX,n.default.DIAMOND),new l.default(d.default.SEVEN,n.default.DIAMOND),new l.default(d.default.NINE,n.default.HEART),new l.default(d.default.QUEEN,n.default.SPADE)],[new l.default(d.default.EIGHT,n.default.CLUB),new l.default(d.default.KING,n.default.SPADE),new l.default(d.default.SIX,n.default.CLUB),new l.default(d.default.FIVE,n.default.CLUB),new l.default(d.default.FOUR,n.default.CLUB),new l.default(d.default.THREE,n.default.CLUB),new l.default(d.default.TWO,n.default.CLUB),new l.default(d.default.EIGHT,n.default.DIAMOND),new l.default(d.default.EIGHT,n.default.HEART),new l.default(d.default.KING,n.default.SPADE)],[new l.default(d.default.NINE,n.default.CLUB),new l.default(d.default.QUEEN,n.default.SPADE),new l.default(d.default.SEVEN,n.default.CLUB),new l.default(d.default.SIX,n.default.HEART),new l.default(d.default.FIVE,n.default.HEART),new l.default(d.default.FOUR,n.default.HEART),new l.default(d.default.ACE,n.default.HEART),new l.default(d.default.NINE,n.default.DIAMOND),new l.default(d.default.SEVEN,n.default.HEART),new l.default(d.default.ACE,n.default.SPADE)],[new l.default(d.default.TEN,n.default.CLUB),new l.default(d.default.TEN,n.default.SPADE),new l.default(d.default.EIGHT,n.default.CLUB),new l.default(d.default.SEVEN,n.default.HEART),new l.default(d.default.TWO,n.default.HEART),new l.default(d.default.THREE,n.default.HEART),new l.default(d.default.KING,n.default.HEART),new l.default(d.default.TEN,n.default.DIAMOND),new l.default(d.default.SIX,n.default.HEART),new l.default(d.default.TWO,n.default.DIAMOND)],[new l.default(d.default.QUEEN,n.default.CLUB),new l.default(d.default.NINE,n.default.SPADE),new l.default(d.default.NINE,n.default.CLUB),new l.default(d.default.EIGHT,n.default.HEART),new l.default(d.default.NINE,n.default.HEART),new l.default(d.default.TEN,n.default.HEART),new l.default(d.default.QUEEN,n.default.HEART),new l.default(d.default.QUEEN,n.default.DIAMOND),new l.default(d.default.FIVE,n.default.HEART),new l.default(d.default.THREE,n.default.DIAMOND)],[new l.default(d.default.KING,n.default.CLUB),new l.default(d.default.EIGHT,n.default.SPADE),new l.default(d.default.TEN,n.default.CLUB),new l.default(d.default.QUEEN,n.default.CLUB),new l.default(d.default.KING,n.default.CLUB),new l.default(d.default.ACE,n.default.CLUB),new l.default(d.default.ACE,n.default.DIAMOND),new l.default(d.default.KING,n.default.DIAMOND),new l.default(d.default.FOUR,n.default.HEART),new l.default(d.default.FOUR,n.default.DIAMOND)],[new l.default(d.default.ACE,n.default.CLUB),new l.default(d.default.SEVEN,n.default.SPADE),new l.default(d.default.SIX,n.default.SPADE),new l.default(d.default.FIVE,n.default.SPADE),new l.default(d.default.FOUR,n.default.SPADE),new l.default(d.default.THREE,n.default.SPADE),new l.default(d.default.TWO,n.default.SPADE),new l.default(d.default.TWO,n.default.HEART),new l.default(d.default.THREE,n.default.HEART),new l.default(d.default.FIVE,n.default.DIAMOND)],[null,new l.default(d.default.ACE,n.default.DIAMOND),new l.default(d.default.KING,n.default.DIAMOND),new l.default(d.default.QUEEN,n.default.DIAMOND),new l.default(d.default.TEN,n.default.DIAMOND),new l.default(d.default.NINE,n.default.DIAMOND),new l.default(d.default.EIGHT,n.default.DIAMOND),new l.default(d.default.SEVEN,n.default.DIAMOND),new l.default(d.default.SIX,n.default.DIAMOND),null]]}return e.prototype.removeChip=function(e){if(!(this.slots[e.row][e.col]instanceof f.default))throw Error("There is no chip to be removed at position: "+e.toString());this.slots[e.row][e.col]=t.DEFAULT_BOARD_STATE[e.row][e.col]},e.prototype.placeChip=function(e,t,a){this.validateChipCanBePlaced(t,a),this.slots[a.row][a.col]=e},e.prototype.validateChipCanBePlaced=function(e,t){var a=t.row,u=t.col,d=this.slots[a][u];if(d instanceof f.default)throw Error("Chip already placed at position: "+t.toString());if(null===d)throw Error("Card cannot be placed at four corners");if(!(d instanceof l.default&&(e.isTwoEyedJack()||e.matches(d))))throw console.log(d),Error("Card at: "+a+", "+u+" in deck is: "+(null==d?"corner":d.toString())+", and player's card is "+e.toString())},e.prototype.verifyBoard=function(){for(var e=new r.default,t=0;t<this.slots.length;t+=1)for(var a=this.slots[t],u=0;u<a.length;u+=1){var d=a[u];if(null!=d)for(var n=0;n<e.cards.length;n++){var f=e.cards[n];if(d instanceof l.default&&f.suit===d.suit&&f.rank===d.rank){e.cards.splice(n,1);break}}}console.log(e)},e.prototype.displayBoard=function(e){e.clearRect(0,0,i.default.CANVAS_WIDTH,i.default.CANVAS_HEIGHT);for(var t=0;t<this.slots.length;t+=1)for(var a=this.slots[t],u=0;u<a.length;u+=1){var d=a[u],n=new o.default(t,u);if(null==d)this.drawCorner(e,n);else if(d instanceof f.default)this.drawChip(e,d,n);else{if(!(d instanceof l.default))throw Error("Invalid board element: "+d);this.drawCard(e,d,n)}}},e.prototype.drawCorner=function(e,t){this.drawBorderedRect(e,t,"#eee")},e.prototype.drawChip=function(e,a,u){var d=t.DEFAULT_BOARD_STATE[u.row][u.col];if(!(d instanceof l.default))throw Error("Card not found at position: "+u.toString());this.drawCard(e,d,u);var n=i.default.CARD_SIZE/2,r=u.row*i.default.CARD_SIZE+n,f=u.col*i.default.CARD_SIZE+n;a.isInSequence()&&(e.fillStyle="#000",e.beginPath(),e.arc(f,r,i.default.CHIP_RADIUS,0,2*Math.PI,!1),e.fill()),e.fillStyle=a.color,e.beginPath();var o=a.isInSequence()?i.default.CHIP_RADIUS/2:i.default.CHIP_RADIUS;e.arc(f,r,o,0,2*Math.PI,!1),e.fill()},e.prototype.drawCard=function(e,t,a){var u=a.col*i.default.CARD_SIZE,l=a.row*i.default.CARD_SIZE;e.fillStyle="#000",e.rect(u,l,i.default.CARD_SIZE,i.default.CARD_SIZE),e.stroke(),e.fillStyle="#000",e.font=i.default.RANK_FONT_FAMILY;var d=u+i.default.RANK_X_OFFSET,n=l+i.default.RANK_Y_OFFSET;e.fillText(""+t.rankDisplay(),d,n),e.font=i.default.INDEX_FONT_FAMILY;var r=u+i.default.INDEX_X_OFFSET,f=l+i.default.INDEX_Y_OFFSET;e.fillText("("+a.row+", "+a.col+")",r,f),e.fillStyle=t.suitColor(),e.font=i.default.SUIT_FONT_FAMILY,e.fillText(""+t.suitDisplay(),u+i.default.SUIT_X_OFFSET,l+i.default.SUIT_Y_OFFSET)},e.prototype.drawBorderedRect=function(e,t,a){var u=t.row*i.default.CARD_SIZE,l=t.col*i.default.CARD_SIZE,d=i.default.CARD_SIZE;e.fillStyle="#000",e.fillRect(l,u,d,d),e.fillStyle=a,e.fillRect(l+1,u+1,d-2,d-2)},e.prototype.cloneSlots=function(){var e=[];return this.slots.map(function(t){e.push(t.map(function(e){return null===e?e:e.clone()}))}),e},e}();t.default=s,t.DEFAULT_BOARD_STATE=[[null,new l.default(d.default.TWO,n.default.SPADE),new l.default(d.default.THREE,n.default.SPADE),new l.default(d.default.FOUR,n.default.SPADE),new l.default(d.default.FIVE,n.default.SPADE),new l.default(d.default.SIX,n.default.SPADE),new l.default(d.default.SEVEN,n.default.SPADE),new l.default(d.default.EIGHT,n.default.SPADE),new l.default(d.default.NINE,n.default.SPADE),null],[new l.default(d.default.SIX,n.default.CLUB),new l.default(d.default.FIVE,n.default.CLUB),new l.default(d.default.FOUR,n.default.CLUB),new l.default(d.default.THREE,n.default.CLUB),new l.default(d.default.TWO,n.default.CLUB),new l.default(d.default.ACE,n.default.HEART),new l.default(d.default.KING,n.default.HEART),new l.default(d.default.QUEEN,n.default.HEART),new l.default(d.default.TEN,n.default.HEART),new l.default(d.default.TEN,n.default.SPADE)],[new l.default(d.default.SEVEN,n.default.CLUB),new l.default(d.default.ACE,n.default.SPADE),new l.default(d.default.TWO,n.default.DIAMOND),new l.default(d.default.THREE,n.default.DIAMOND),new l.default(d.default.FOUR,n.default.DIAMOND),new l.default(d.default.FIVE,n.default.DIAMOND),new l.default(d.default.SIX,n.default.DIAMOND),new l.default(d.default.SEVEN,n.default.DIAMOND),new l.default(d.default.NINE,n.default.HEART),new l.default(d.default.QUEEN,n.default.SPADE)],[new l.default(d.default.EIGHT,n.default.CLUB),new l.default(d.default.KING,n.default.SPADE),new l.default(d.default.SIX,n.default.CLUB),new l.default(d.default.FIVE,n.default.CLUB),new l.default(d.default.FOUR,n.default.CLUB),new l.default(d.default.THREE,n.default.CLUB),new l.default(d.default.TWO,n.default.CLUB),new l.default(d.default.EIGHT,n.default.DIAMOND),new l.default(d.default.EIGHT,n.default.HEART),new l.default(d.default.KING,n.default.SPADE)],[new l.default(d.default.NINE,n.default.CLUB),new l.default(d.default.QUEEN,n.default.SPADE),new l.default(d.default.SEVEN,n.default.CLUB),new l.default(d.default.SIX,n.default.HEART),new l.default(d.default.FIVE,n.default.HEART),new l.default(d.default.FOUR,n.default.HEART),new l.default(d.default.ACE,n.default.HEART),new l.default(d.default.NINE,n.default.DIAMOND),new l.default(d.default.SEVEN,n.default.HEART),new l.default(d.default.ACE,n.default.SPADE)],[new l.default(d.default.TEN,n.default.CLUB),new l.default(d.default.TEN,n.default.SPADE),new l.default(d.default.EIGHT,n.default.CLUB),new l.default(d.default.SEVEN,n.default.HEART),new l.default(d.default.TWO,n.default.HEART),new l.default(d.default.THREE,n.default.HEART),new l.default(d.default.KING,n.default.HEART),new l.default(d.default.TEN,n.default.DIAMOND),new l.default(d.default.SIX,n.default.HEART),new l.default(d.default.TWO,n.default.DIAMOND)],[new l.default(d.default.QUEEN,n.default.CLUB),new l.default(d.default.NINE,n.default.SPADE),new l.default(d.default.NINE,n.default.CLUB),new l.default(d.default.EIGHT,n.default.HEART),new l.default(d.default.NINE,n.default.HEART),new l.default(d.default.TEN,n.default.HEART),new l.default(d.default.QUEEN,n.default.HEART),new l.default(d.default.QUEEN,n.default.DIAMOND),new l.default(d.default.FIVE,n.default.HEART),new l.default(d.default.THREE,n.default.DIAMOND)],[new l.default(d.default.KING,n.default.CLUB),new l.default(d.default.EIGHT,n.default.SPADE),new l.default(d.default.TEN,n.default.CLUB),new l.default(d.default.QUEEN,n.default.CLUB),new l.default(d.default.KING,n.default.CLUB),new l.default(d.default.ACE,n.default.CLUB),new l.default(d.default.ACE,n.default.DIAMOND),new l.default(d.default.KING,n.default.DIAMOND),new l.default(d.default.FOUR,n.default.HEART),new l.default(d.default.FOUR,n.default.DIAMOND)],[new l.default(d.default.ACE,n.default.CLUB),new l.default(d.default.SEVEN,n.default.SPADE),new l.default(d.default.SIX,n.default.SPADE),new l.default(d.default.FIVE,n.default.SPADE),new l.default(d.default.FOUR,n.default.SPADE),new l.default(d.default.THREE,n.default.SPADE),new l.default(d.default.TWO,n.default.SPADE),new l.default(d.default.TWO,n.default.HEART),new l.default(d.default.THREE,n.default.HEART),new l.default(d.default.FIVE,n.default.DIAMOND)],[null,new l.default(d.default.ACE,n.default.DIAMOND),new l.default(d.default.KING,n.default.DIAMOND),new l.default(d.default.QUEEN,n.default.DIAMOND),new l.default(d.default.TEN,n.default.DIAMOND),new l.default(d.default.NINE,n.default.DIAMOND),new l.default(d.default.EIGHT,n.default.DIAMOND),new l.default(d.default.SEVEN,n.default.DIAMOND),new l.default(d.default.SIX,n.default.DIAMOND),null]]},function(e,t,a){"use strict";var u;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.BLUE="#1E90FF",e.GREEN="#228B22"}(u||(u={})),t.default=u},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(5)),d=function(){function e(){}return e.calculate=function(e,t){for(var a=0,u=function(u){var d=e.slots[u];a=l.calculateSequenceCount(d,t,a);var n=e.slots.map(function(e){return e[u]});a=l.calculateSequenceCount(n,t,a)},l=this,d=0;d<10;d++)u(d);for(var n=0,r=0,f=0;f<10;f++){var o=[];n=0,r=f;for(var i=0;i<10;i++)n<=9&&r<=9&&(o.push(e.slots[n][r]),n++,r++);a=this.calculateSequenceCount(o,t,a)}for(f=1;f<10;f++){o=[];n=f,r=0;for(i=0;i<10;i++)n<=9&&r<=9&&(o.push(e.slots[n][r]),n++,r++);a=this.calculateSequenceCount(o,t,a)}for(f=9;f>0;f--){o=[];r=f,n=0;for(i=9;i>0;i--)n<=9&&r>=0&&(o.push(e.slots[n][r]),n++,r--);a=this.calculateSequenceCount(o,t,a)}for(f=1;f<10;f++){o=[];r=9,n=f;for(i=1;i<9;i++)n<=9&&r>=0&&(o.push(e.slots[n][r]),n++,r--);a=this.calculateSequenceCount(o,t,a)}return a>1},e.calculateSequenceCount=function(t,a,u){var l=e.hasSequence(t,a);return l.hasSequence()&&(l.markChipsInSequence(),10===l.sequenceCount?u+=2:u++),u},e.hasSequence=function(e,t){for(var a=new n,u=0;u<e.length;u++){var d=e[u];null===d||d instanceof l.default&&d.color===t?null!=d?a.addChip(d):a.addCorner():a.resetSequence()}return a},e}();t.default=d;var n=function(){function e(){this.sequenceChips=[],this.gameOver=!1,this.sequenceCount=0,this.cornerCount=0}return e.prototype.resetSequence=function(){this.sequenceChips=[],this.sequenceCount=0,this.cornerCount=0},e.prototype.addCorner=function(){this.cornerCount++,this.sequenceCount++},e.prototype.addChip=function(e){this.sequenceChips.push(e),this.sequenceCount++},e.prototype.markChipsInSequence=function(){if(10!==this.sequenceCount)for(var e=0;e<5-this.cornerCount;e++)this.sequenceChips[e].markInSequence();else this.sequenceChips.forEach(function(e){return e.markInSequence()})},e.prototype.hasSequence=function(){return this.sequenceCount>4},e}()},function(e,t,a){"use strict";var u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=u(a(0)),d=u(a(6)),n=u(a(7)),r=u(a(3));function f(e,t){for(var a=0;a<e.length;a++)for(var u=e[a],d=0;d<u.length;d++){var n=u[d];if(n instanceof l.default&&t.matches(n))return new r.default(a,d)}return null}t.default=function(e,t,a){var u=t.map(function(e){return e.toString()}).join(","),l=prompt("computer2: \n    p = place chip, r = remove chip, d = dead card \r\n"+u);if(!l)return function(e,t){for(var a=0;a<t.length;a++){var u=t[a],l=f(e,u);if(null!=l)return new d.default(n.default.PLACE_CHIP,u,l)}throw new Error("All player cards are dead cards")}(e,t);var o=l.substr(0,1),i=Number(l.substr(1,1)),s=Number(l.substr(2,1)),c=Number(l.substr(3,1));console.log("type: "+o+", index: "+i+", row: "+s+", col: "+c);var E=t[i];switch(o){case"p":return new d.default(n.default.PLACE_CHIP,E,new r.default(s,c));case"r":return new d.default(n.default.REMOVE_CHIP,E,new r.default(s,c));case"d":return new d.default(n.default.REPLACE_DEAD_CARD,E);default:throw new Error("Invalid move")}}}]);